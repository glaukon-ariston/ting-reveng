/DSCDataEncode/net.anastigmatix.filter resourcestatus{ pop % 146
 2 % 136
 lt % 146
{ currentfile % 146
 flushfile % 146
} if % 146
} if % 146
/net.anastigmatix.MetaPre/ProcSet findresource % 146
 begin % 146
/net.anastigmatix.StreamIO/ProcSet findresource % 146
 begin % 146
 14 % 136
 dict % 146
 begin % 146
currentpacking //false % 141
setpacking currentglobal % 146
 //true % 141
 setglobal % 146
/LF (\n) % 142
readonly def % 146
/CR (\r) % 142
readonly def % 146
/BDAT (%%BeginData: ) % 142
readonly def % 146
/EDAT (%%EndData\n) % 142
readonly def % 146
/BIN (Binary) % 142
readonly def % 146
/HEX (Hex) % 142
readonly def % 146
/ASC (ASCII) % 142
readonly def % 146
/BYT (Bytes) % 142
readonly def % 146
/LIN (Lines) % 142
readonly def % 146
/.fix{ 10 % 136
 string % 146
 cvs % 146
 2 % 136
 index % 146
 1 % 136
 get % 146
 dup % 146
 dup % 146
//EDAT writestring % 146
 flushfile % 146
 dup % 146
fileposition 1 % 136
 index % 146
 4 % 136
 index % 146
 0 % 136
 get % 146
 4 % 136
 index % 146
 length % 146
 sub % 146
setfileposition 1 % 136
 index % 146
 3 % 136
 index % 146
 writestring % 146
setfileposition pop % 146
} bind % 146
 def % 146
/.lfin-lines{ dup % 146
 1 % 136
 get % 146
 not % 146
{ 1 % 136
 index % 146
 1 % 136
 get % 146
//LF writestring % 146
 dup % 146
 4 % 136
 2 % 136
 copy % 146
 get % 146
 1 % 136
 add % 146
 put % 146
 dup % 146
 3 % 136
 2 % 136
 copy % 146
 get % 146
 1 % 136
 add % 146
 put % 146
} if % 146
 dup % 146
 3 % 136
 get % 146
//.fix exec % 146
 pop % 146
} bind % 146
 def % 146
/.lfin-bytes{ dup % 146
 4 % 136
 get % 146
//.fix exec % 146
 pop % 146
} bind % 146
 def % 146
/.lwrite{ exch % 146
 dup % 146
 () % 142
 ne % 146
{ 2 % 136
 index % 146
 dup % 146
 1 % 136
 get % 146
 2 % 136
 index % 146
 writestring % 146
 2 % 136
 get % 146
 dup % 146
 4 % 136
 2 % 136
 copy % 146
 get % 146
 1 % 136
 add % 146
 put % 146
 1 % 136
 index % 146
//LF eq % 146
{ dup % 146
 1 % 136
 //true % 141
 put % 146
 dup % 146
 2 % 136
 2 % 136
 copy % 146
 get % 146
 not % 146
{ 1 % 136
 index % 146
 3 % 136
 2 % 136
 copy % 146
 get % 146
 1 % 136
 add % 146
 put % 146
} if % 146
 //false % 141
 put % 146
}{ 1 % 136
 index % 146
//CR eq % 146
{ dup % 146
 1 % 136
 //true % 141
 put % 146
 dup % 146
 3 % 136
 2 % 136
 copy % 146
 get % 146
 1 % 136
 add % 146
 put % 146
 dup % 146
 2 % 136
 //true % 141
 put % 146
}{ dup % 146
 2 % 136
 //false % 141
 put % 146
 dup % 146
 1 % 136
 //false % 141
 put % 146
} ifelse % 146
} ifelse % 146
 pop % 146
} if % 146
 pop % 146
 not % 146
{ dup % 146
 2 % 136
 get % 146
 1 % 136
 index % 146
 3 % 136
 get % 146
 exec % 146
 dup % 146
 5 % 136
 get % 146
{ dup % 146
 1 % 136
 get % 146
closefile} if % 146
} if % 146
 4 % 136
 get % 146
} bind % 146
 def % 146
 setglobal % 146
 //true % 141
setpacking/.dg{ exch % 146
 currentdict % 146
 exch % 146
 2 % 136
 copy % 146
 known % 146
{ get % 146
 exch % 146
 pop % 146
}{ pop % 146
 pop % 146
 exec % 146
} ifelse % 146
} bind % 146
 def % 146
/DSCDataEncode{ begin % 146
//.lwrite exch % 146
 dup % 146
//BDAT writestring % 146
 10 % 136
{ dup % 146
 32 % 136
 write % 146
} repeat % 146
 dup % 146
 flushfile % 146
 dup % 146
fileposition //true % 141
 //false % 141
 0 % 136
 0 % 136
 //true % 141
 setglobal % 146
 5 % 136
 array % 146
 astore % 146
 1 % 136
 index % 146
 dup % 146
 32 % 136
 write % 146
 dup % 146
/Type//BIN//.dg exec % 146
 dup % 146
//BIN eq % 146
 1 % 136
 index % 146
//HEX eq % 146
 or % 146
 1 % 136
 index % 146
//ASC eq % 146
 or % 146
 not % 146
{/net.anastigmatix.InvalidFilterParam//errorstop exec % 146
} if % 146
 writestring % 146
 32 % 136
 write % 146
/Count//BYT//.dg exec % 146
 dup % 146
//BYT eq % 146
{//.lfin-bytes}{ dup % 146
//LIN eq % 146
{//.lfin-lines}{/net.anastigmatix.InvalidFilterParam//errorstop exec % 146
} ifelse % 146
} ifelse % 146
 exch % 146
 3 % 136
 index % 146
 exch % 146
 writestring % 146
 2 % 136
 index % 146
//LF writestring % 146
 2 % 136
 index % 146
gcheck setglobal % 146
 1 % 136
 string % 146
/CloseTarget //false % 141
//.dg exec % 146
 end % 146
 6 % 136
 array % 146
 astore % 146
/Encode} bind % 146
 end % 146
 end % 146
 end % 146
/net.anastigmatix.filter defineresource pop % 146
setpacking