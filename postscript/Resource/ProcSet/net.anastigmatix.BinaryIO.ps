/net.anastigmatix.BinaryIO/ProcSet resourcestatus{ pop % 146
 2 % 136
 lt % 146
{ currentfile % 146
 flushfile % 146
} if % 146
} if % 146
/net.anastigmatix.MetaPre/ProcSet findresource % 146
 begin % 146
 33 % 136
 dict % 146
 begin % 146
currentpacking //true % 141
setpacking currentglobal % 146
 //true % 141
 setglobal % 146
/.sxe{//systemdict/errordict get % 146
/syntaxerror get % 146
 exec % 146
} bind % 146
 def % 146
/read_uint8{ dup % 146
 read % 146
{ exch % 146
 pop % 146
}{//.sxe exec % 146
} ifelse % 146
} bind % 146
 def % 146
/read_int8{//read_uint8 exec % 146
 0 % 136
 1 % 136
 index % 146
 128 % 134
 and % 146
 sub % 146
 or % 146
} bind % 146
 def % 146
/readbe_uint16{ dup % 146
//read_uint8 exec % 146
 8 % 136
 bitshift % 146
 exch % 146
//read_uint8 exec % 146
 or % 146
} bind % 146
 def % 146
/readle_uint16{ dup % 146
//read_uint8 exec % 146
 exch % 146
//read_uint8 exec % 146
 8 % 136
 bitshift % 146
 or % 146
} bind % 146
 def % 146
/readbe_int16{ dup % 146
//read_int8 exec % 146
 8 % 136
 bitshift % 146
 exch % 146
//read_uint8 exec % 146
 or % 146
} bind % 146
 def % 146
/readle_int16{ dup % 146
//read_uint8 exec % 146
 exch % 146
//read_int8 exec % 146
 8 % 136
 bitshift % 146
 or % 146
} bind % 146
 def % 146
/readbe_int32{ dup % 146
//readbe_uint16 exec % 146
 16 % 136
 bitshift % 146
 exch % 146
//readbe_uint16 exec % 146
 or % 146
} bind % 146
 def % 146
/readle_int32{ dup % 146
//readle_uint16 exec % 146
 exch % 146
//readle_uint16 exec % 146
 16 % 136
 bitshift % 146
 or % 146
} bind % 146
 def % 146
/readn{ readstring % 146
 not % 146
{/readn//.sxe exec % 146
} if % 146
} bind % 146
 def % 146
/.br4{ 5 % 136
 string % 146
 dup % 146
 0 % 136
 4 % 136
 -1 % 136
 roll % 146
 put % 146
 exch % 146
 1 % 136
 index % 146
 1 % 136
 4 % 136
 getinterval % 146
//readn exec % 146
 pop % 146
currentobjectformat 0 % 136
 eq % 146
{ 2 % 136
setobjectformat token % 146
 0 % 136
setobjectformat}{ token % 146
} ifelse % 146
 not % 146
//.sxe if % 146
 exch % 146
 pop % 146
} bind % 146
 def % 146
/readbe_IEEE32{ 138 % 134
//.br4 exec % 146
} bind % 146
 def % 146
/readle_IEEE32{ 139 % 134
//.br4 exec % 146
} bind % 146
 def % 146
/write_int8 /write % 145
 load % 146
 def % 146
/writebe_int16{ 2 % 136
 copy % 146
 -8 % 136
 bitshift % 146
 write % 146
 write % 146
} bind % 146
 def % 146
/writele_int16{ 2 % 136
 copy % 146
 write % 146
 -8 % 136
 bitshift % 146
 write % 146
} bind % 146
 def % 146
/writebe_int32{ 2 % 136
 copy % 146
 -16 % 136
 bitshift % 146
//writebe_int16 exec % 146
//writebe_int16 exec % 146
} bind % 146
 def % 146
/writele_int32{ 2 % 136
 copy % 146
//writele_int16 exec % 146
 -16 % 136
 bitshift % 146
//writele_int16 exec % 146
} bind % 146
 def % 146
/.rtib{ 12 % 136
 string % 146
 dup % 146
/NullEncode filter % 146
 dup % 146
 5 % 136
 index % 146
 0 % 136
 writeobject % 146
closefile dup % 146
 4 % 136
 get % 146
 2 % 136
 ne % 146
 1 % 136
 index % 146
 5 % 136
 get % 146
 0 % 136
 ne % 146
 or % 146
{ pop % 146
setobjectformat errordict/typecheck get % 146
 exec % 146
} if % 146
 4 % 136
 -2 % 136
 roll % 146
 pop % 146
 pop % 146
 dup % 146
 7 % 136
 1 % 136
 index % 146
 0 % 136
 get % 146
 4 % 136
 add % 146
 put % 146
 7 % 136
 5 % 136
 getinterval % 146
} bind % 146
 def % 146
/.wie32{ currentobjectformat exch % 146
setobjectformat//.rtib exec % 146
 exch % 146
setobjectformat 1 % 136
 4 % 136
 getinterval % 146
 writestring % 146
} bind % 146
 def % 146
/writebe_IEEE32{/writebe_IEEE32 1 % 136
//.wie32 exec % 146
} bind % 146
 def % 146
/writele_IEEE32{/writele_IEEE32 2 % 136
//.wie32 exec % 146
} bind % 146
 def % 146
/.arrd{ exch % 146
 dup % 146
 array % 146
 dup % 146
 3 % 136
 -1 % 136
 roll % 146
 1 % 136
 sub % 146
 0 % 136
 exch % 146
 1 % 136
 exch % 146
{ 4 % 136
 index % 146
 4 % 136
 index % 146
 exec % 146
 put % 146
 dup % 146
} for % 146
 pop % 146
 exch % 146
 pop % 146
 exch % 146
 pop % 146
} bind % 146
 def % 146
/readnbe_int32{//readbe_int32//.arrd exec % 146
} bind % 146
 def % 146
/readnle_int32{//readle_int32//.arrd exec % 146
} bind % 146
 def % 146
/readnbe_uint16{//readbe_uint16//.arrd exec % 146
} bind % 146
 def % 146
/readnbe_int16{//readbe_int16//.arrd exec % 146
} bind % 146
 def % 146
/readnle_uint16{//readle_uint16//.arrd exec % 146
} bind % 146
 def % 146
/readnle_int16{//readle_int16//.arrd exec % 146
} bind % 146
 def % 146
/readnbe_IEEE32{//readbe_IEEE32//.arrd exec % 146
} bind % 146
 def % 146
/readnle_IEEE32{//readle_IEEE32//.arrd exec % 146
} bind % 146
 def % 146
/realtointbits{/realtointbits currentobjectformat 2 % 136
setobjectformat//.rtib exec % 146
 cvx % 146
 exec % 146
 exch % 146
setobjectformat} bind % 146
 def % 146
/intbitstoreal{ 5 % 136
 string % 146
 dup % 146
/NullEncode filter % 146
 dup % 146
 139 % 134
 write % 146
 dup % 146
 4 % 136
 -1 % 136
 roll % 146
//writele_int32 exec % 146
closefile cvx % 146
currentobjectformat exch % 146
 2 % 136
setobjectformat exec % 146
 exch % 146
setobjectformat} bind % 146
 def % 146
 setglobal % 146
setpacking{/readn/readbe_int32/readle_int32/readbe_int16/readle_int16/read_int8/readbe_uint16/readle_uint16/read_uint8/readbe_IEEE32/readle_IEEE32/write_int8/writebe_int16/writele_int16/writebe_int32/writele_int32/writebe_IEEE32/writele_IEEE32/readnbe_int32/readnle_int32/readnbe_int16/readnle_int16/readnbe_IEEE32/readnle_IEEE32/realtointbits/intbitstoreal/readnbe_uint16/readnle_uint16} export/net.anastigmatix.BinaryIO exch % 146
/ProcSet defineresource pop % 146
 end % 146
