/net.anastigmatix.StreamIO/ProcSet resourcestatus{ pop % 146
 2 % 136
 lt % 146
{ pop % 146
 currentfile % 146
 flushfile % 146
} if % 146
} if % 146
/net.anastigmatix.MetaPre/ProcSet findresource % 146
 begin % 146
 32 % 136
 dict % 146
 begin % 146
/filterFlushfileBug exch % 146
 def % 146
currentpacking //true % 141
setpacking currentglobal % 146
 //true % 141
 setglobal % 146
[ //true % 141
]{ not % 146
{-1| [ 1 % 136
 index % 146
] |- 0 % 136
 //false % 141
 put % 146
} if % 146
 pop % 146
 ( ) % 142
}metabind/NullEncode filter % 146
closefile 0 % 136
 get % 146
/filterCloseBug exch % 146
 def % 146
 (r+w+a+) % 142
readonly dup % 146
{ 4 % 136
 2 % 136
 2 % 136
 2 % 136
 0 % 136
 2 % 136
 4 % 136
 1 % 136
 2 % 136
 1 % 136
 0 % 136
 1 % 136
}{ getinterval % 146
 exch % 146
 dup % 146
} 2 % 136
ingroups xforall pop % 146
 pop % 146
{/r/w/a/r+/w+/a+}{ exch % 146
 def % 146
} forall % 146
/rfile{//r file % 146
} bind % 146
 def % 146
/wfile{//w file % 146
} bind % 146
 def % 146
/afile{//a file % 146
} bind % 146
 def % 146
/r+file{//r+ file % 146
} bind % 146
 def % 146
/w+file{//w+ file % 146
} bind % 146
 def % 146
/a+file{//a+ file % 146
} bind % 146
 def % 146
/in (%stdin) % 142
readonly def % 146
/out (%stdout) % 142
readonly def % 146
/err (%stderr) % 142
readonly def % 146
/stdin{//in//rfile exec % 146
} bind % 146
 def % 146
/stdout{//out//wfile exec % 146
} bind % 146
 def % 146
/stderr{//err//wfile exec % 146
} bind % 146
 def % 146
/nullsrc{ () % 142
 0 % 136
 () % 142
/SubFileDecode filter % 146
} bind % 146
 def % 146
/nulltgt{{{ dup % 146
 () % 142
 eq % 146
{ pop % 146
 256 % 134
 string % 146
} if % 146
} if % 146
}/NullEncode filter % 146
} bind % 146
 def % 146
/copyfile{ dup % 146
 type % 146
/filetype ne % 146
{ (w) % 142
 file % 146
} if % 146
 1 % 136
 index % 146
 type % 146
/filetype ne % 146
{ exch % 146
 (r) % 142
 file % 146
 exch % 146
} if % 146
 exch % 146
 4096 % 134
 string % 146
 3 % 136
 copy % 146
{ readstring % 146
{ writestring % 146
 3 % 136
 copy % 146
}{ writestring % 146
 pop % 146
 pop % 146
 pop % 146
 exit % 146
} ifelse % 146
} loop % 146
} bind % 146
 def % 146
/flushn{ dup % 146
 0 % 136
 le % 146
{ pop % 146
 pop % 146
}{ () % 142
/SubFileDecode -1|//filterFlushfileBug{{ filter % 146
 0 % 136
 () % 142
/SubFileDecode}}{{}} ifelse % 146
|- filter % 146
 flushfile % 146
} ifelse % 146
}metabind def % 146
/flushthru{ 0 % 136
 exch % 146
/SubFileDecode -|//filterFlushfileBug{{ filter % 146
 0 % 136
 () % 142
/SubFileDecode}}{{}} ifelse % 146
|- filter % 146
 flushfile % 146
}metabind def % 146
/.filtype <</Decode{{ -| [ exch % 146
] |- dup % 146
 0 % 136
 get % 146
 exec % 146
} 0 % 136
 () % 142
/SubFileDecode -|//filterFlushfileBug{{ filter % 146
 0 % 136
 () % 142
/SubFileDecode}}{{}} ifelse % 146
|-} metabind/Encode{{ -| [ 1 % 136
 index % 146
] |- 3 % 136
 1 % 136
 roll % 146
-| [ exch % 146
] |- 0 % 136
 get % 146
 exec % 146
}/NullEncode} metabind >> readonly def % 146
/.xf{ currentglobal % 146
 4 % 136
 1 % 136
 roll % 146
 exec % 146
//.filtype exch % 146
 get % 146
 1 % 136
 index % 146
gcheck setglobal % 146
 exec % 146
 filter % 146
 exch % 146
 setglobal % 146
} bind % 146
 def % 146
/extfilter{ dup % 146
 type % 146
/nametype ne % 146
//.xf{/net.anastigmatix.filter 2 % 136
 copy % 146
resourcestatus{ pop % 146
 pop % 146
 findresource % 146
//.xf exec % 146
}{ pop % 146
 filter % 146
} ifelse % 146
} ifelse % 146
} bind % 146
 def % 146
/.bs1 <</BufferSize 1 % 136
>> readonly def % 146
/holdstring{ dup % 146
 type % 146
/integertype ne % 146
{/hold errordict/typecheck get % 146
 exec % 146
} if % 146
[ 0 % 136
] 1 % 136
 array % 146
 dup % 146
<</Count 4 % 136
 index % 146
/BufferSize 8 % 136
 -1 % 136
 roll % 146
>>/StringQueueEncode//extfilter exec % 146
 dup % 146
 5 % 136
 -1 % 136
 roll % 146
 4 % 136
 1 % 136
//hvhide+ap exec % 146
closefile exch % 146
 0 % 136
 get % 146
 exch % 146
//.bs1/SourceQueueDecode//extfilter exec % 146
 exch % 146
 1 % 136
 index % 146
 exch % 146
 string % 146
 dup % 146
 () % 142
 ne % 146
{ readstring % 146
}{ exch % 146
} ifelse % 146
 pop % 146
 exch % 146
closefile} bind % 146
 def % 146
/holdfile//holdstring 0 % 136
 42 % 136
 getinterval % 146
 def % 146
/hold//holdstring 0 % 136
 36 % 136
 getinterval % 146
 def % 146
 setglobal % 146
setpacking{/rfile/wfile/afile/r+file/w+file/a+file/stdin/stdout/stderr/nullsrc/nulltgt/copyfile/flushn/flushthru/extfilter/hold/holdfile/holdstring/filterCloseBug/filterFlushfileBug} export/net.anastigmatix.StreamIO exch % 146
/ProcSet defineresource pop % 146
 end % 146
